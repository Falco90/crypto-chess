{
  "id": "61e03559e674f52d55c7a655f15c2585",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.25",
  "solcLongVersion": "0.8.25+commit.b61c2a91",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/proxy/Proxy.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"
      },
      "contracts/ChessTournamentProxy.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.25;\n\nimport { Proxy } from \"@openzeppelin/contracts/proxy/Proxy.sol\";\n\ncontract ChessTournamentProxy is Proxy{\n    address implementationAddress;\n\n    constructor(address _implementationAddress) {\n        implementationAddress = _implementationAddress;\n    }\n    function _implementation() internal view override returns (address) {\n        return implementationAddress;\n    }\n}"
      }
    },
    "settings": {
      "evmVersion": "london",
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/proxy/Proxy.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
          "exportedSymbols": {
            "Proxy": [
              35
            ]
          },
          "id": 36,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "99:24:0"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Proxy",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "125:598:0",
                "text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
              },
              "fullyImplemented": false,
              "id": 35,
              "linearizedBaseContracts": [
                35
              ],
              "name": "Proxy",
              "nameLocation": "742:5:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 9,
                    "nodeType": "Block",
                    "src": "1009:835:0",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "1028:810:0",
                          "nodeType": "YulBlock",
                          "src": "1028:810:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1281:1:0",
                                    "nodeType": "YulLiteral",
                                    "src": "1281:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1284:1:0",
                                    "nodeType": "YulLiteral",
                                    "src": "1284:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "calldatasize",
                                      "nativeSrc": "1287:12:0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1287:12:0"
                                    },
                                    "nativeSrc": "1287:14:0",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1287:14:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nativeSrc": "1268:12:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1268:12:0"
                                },
                                "nativeSrc": "1268:34:0",
                                "nodeType": "YulFunctionCall",
                                "src": "1268:34:0"
                              },
                              "nativeSrc": "1268:34:0",
                              "nodeType": "YulExpressionStatement",
                              "src": "1268:34:0"
                            },
                            {
                              "nativeSrc": "1429:74:0",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1429:74:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nativeSrc": "1456:3:0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1456:3:0"
                                    },
                                    "nativeSrc": "1456:5:0",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1456:5:0"
                                  },
                                  {
                                    "name": "implementation",
                                    "nativeSrc": "1463:14:0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1463:14:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1479:1:0",
                                    "nodeType": "YulLiteral",
                                    "src": "1479:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "calldatasize",
                                      "nativeSrc": "1482:12:0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1482:12:0"
                                    },
                                    "nativeSrc": "1482:14:0",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1482:14:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1498:1:0",
                                    "nodeType": "YulLiteral",
                                    "src": "1498:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1501:1:0",
                                    "nodeType": "YulLiteral",
                                    "src": "1501:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "delegatecall",
                                  "nativeSrc": "1443:12:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1443:12:0"
                                },
                                "nativeSrc": "1443:60:0",
                                "nodeType": "YulFunctionCall",
                                "src": "1443:60:0"
                              },
                              "variables": [
                                {
                                  "name": "result",
                                  "nativeSrc": "1433:6:0",
                                  "nodeType": "YulTypedName",
                                  "src": "1433:6:0",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1571:1:0",
                                    "nodeType": "YulLiteral",
                                    "src": "1571:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1574:1:0",
                                    "nodeType": "YulLiteral",
                                    "src": "1574:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nativeSrc": "1577:14:0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1577:14:0"
                                    },
                                    "nativeSrc": "1577:16:0",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1577:16:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nativeSrc": "1556:14:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1556:14:0"
                                },
                                "nativeSrc": "1556:38:0",
                                "nodeType": "YulFunctionCall",
                                "src": "1556:38:0"
                              },
                              "nativeSrc": "1556:38:0",
                              "nodeType": "YulExpressionStatement",
                              "src": "1556:38:0"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "1689:59:0",
                                    "nodeType": "YulBlock",
                                    "src": "1689:59:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "1714:1:0",
                                              "nodeType": "YulLiteral",
                                              "src": "1714:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nativeSrc": "1717:14:0",
                                                "nodeType": "YulIdentifier",
                                                "src": "1717:14:0"
                                              },
                                              "nativeSrc": "1717:16:0",
                                              "nodeType": "YulFunctionCall",
                                              "src": "1717:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "1707:6:0",
                                            "nodeType": "YulIdentifier",
                                            "src": "1707:6:0"
                                          },
                                          "nativeSrc": "1707:27:0",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1707:27:0"
                                        },
                                        "nativeSrc": "1707:27:0",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1707:27:0"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "1682:66:0",
                                  "nodeType": "YulCase",
                                  "src": "1682:66:0",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "1687:1:0",
                                    "nodeType": "YulLiteral",
                                    "src": "1687:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "1769:59:0",
                                    "nodeType": "YulBlock",
                                    "src": "1769:59:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "1794:1:0",
                                              "nodeType": "YulLiteral",
                                              "src": "1794:1:0",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nativeSrc": "1797:14:0",
                                                "nodeType": "YulIdentifier",
                                                "src": "1797:14:0"
                                              },
                                              "nativeSrc": "1797:16:0",
                                              "nodeType": "YulFunctionCall",
                                              "src": "1797:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "return",
                                            "nativeSrc": "1787:6:0",
                                            "nodeType": "YulIdentifier",
                                            "src": "1787:6:0"
                                          },
                                          "nativeSrc": "1787:27:0",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1787:27:0"
                                        },
                                        "nativeSrc": "1787:27:0",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1787:27:0"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "1761:67:0",
                                  "nodeType": "YulCase",
                                  "src": "1761:67:0",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "name": "result",
                                "nativeSrc": "1615:6:0",
                                "nodeType": "YulIdentifier",
                                "src": "1615:6:0"
                              },
                              "nativeSrc": "1608:220:0",
                              "nodeType": "YulSwitch",
                              "src": "1608:220:0"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 5,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1463:14:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 8,
                        "nodeType": "InlineAssembly",
                        "src": "1019:819:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "754:190:0",
                    "text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
                  },
                  "id": 10,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_delegate",
                  "nameLocation": "958:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "976:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "968:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "968:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "967:24:0"
                  },
                  "returnParameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1009:0:0"
                  },
                  "scope": 35,
                  "src": "949:895:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "documentation": {
                    "id": 11,
                    "nodeType": "StructuredDocumentation",
                    "src": "1850:173:0",
                    "text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."
                  },
                  "id": 16,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_implementation",
                  "nameLocation": "2037:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2052:2:0"
                  },
                  "returnParameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "2086:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2086:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2085:9:0"
                  },
                  "scope": 35,
                  "src": "2028:67:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 25,
                    "nodeType": "Block",
                    "src": "2361:45:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 21,
                                "name": "_implementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16,
                                "src": "2381:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 22,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2381:17:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 20,
                            "name": "_delegate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "2371:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2371:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24,
                        "nodeType": "ExpressionStatement",
                        "src": "2371:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 17,
                    "nodeType": "StructuredDocumentation",
                    "src": "2101:217:0",
                    "text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
                  },
                  "id": 26,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_fallback",
                  "nameLocation": "2332:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 18,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2341:2:0"
                  },
                  "returnParameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2361:0:0"
                  },
                  "scope": 35,
                  "src": "2323:83:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 33,
                    "nodeType": "Block",
                    "src": "2639:28:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 30,
                            "name": "_fallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "2649:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 31,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2649:11:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32,
                        "nodeType": "ExpressionStatement",
                        "src": "2649:11:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 27,
                    "nodeType": "StructuredDocumentation",
                    "src": "2412:186:0",
                    "text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
                  },
                  "id": 34,
                  "implemented": true,
                  "kind": "fallback",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2611:2:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2639:0:0"
                  },
                  "scope": 35,
                  "src": "2603:64:0",
                  "stateMutability": "payable",
                  "virtual": true,
                  "visibility": "external"
                }
              ],
              "scope": 36,
              "src": "724:1945:0",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "99:2571:0"
        },
        "id": 0
      },
      "contracts/ChessTournamentProxy.sol": {
        "ast": {
          "absolutePath": "contracts/ChessTournamentProxy.sol",
          "exportedSymbols": {
            "ChessTournamentProxy": [
              63
            ],
            "Proxy": [
              35
            ]
          },
          "id": 64,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 37,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".25"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
              "file": "@openzeppelin/contracts/proxy/Proxy.sol",
              "id": 39,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 64,
              "sourceUnit": 36,
              "src": "65:64:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 38,
                    "name": "Proxy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "74:5:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 40,
                    "name": "Proxy",
                    "nameLocations": [
                      "164:5:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 35,
                    "src": "164:5:1"
                  },
                  "id": 41,
                  "nodeType": "InheritanceSpecifier",
                  "src": "164:5:1"
                }
              ],
              "canonicalName": "ChessTournamentProxy",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 63,
              "linearizedBaseContracts": [
                63,
                35
              ],
              "name": "ChessTournamentProxy",
              "nameLocation": "140:20:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "implementationAddress",
                  "nameLocation": "183:21:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "175:29:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "175:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 52,
                    "nodeType": "Block",
                    "src": "255:63:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 48,
                            "name": "implementationAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "265:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 49,
                            "name": "_implementationAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "289:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "265:46:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 51,
                        "nodeType": "ExpressionStatement",
                        "src": "265:46:1"
                      }
                    ]
                  },
                  "id": 53,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 45,
                        "mutability": "mutable",
                        "name": "_implementationAddress",
                        "nameLocation": "231:22:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 53,
                        "src": "223:30:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "223:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "222:32:1"
                  },
                  "returnParameters": {
                    "id": 47,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "255:0:1"
                  },
                  "scope": 63,
                  "src": "211:107:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    16
                  ],
                  "body": {
                    "id": 61,
                    "nodeType": "Block",
                    "src": "391:45:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 59,
                          "name": "implementationAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "408:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 58,
                        "id": 60,
                        "nodeType": "Return",
                        "src": "401:28:1"
                      }
                    ]
                  },
                  "id": 62,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_implementation",
                  "nameLocation": "332:15:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 55,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "364:8:1"
                  },
                  "parameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "347:2:1"
                  },
                  "returnParameters": {
                    "id": 58,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 57,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "382:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 56,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "382:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "381:9:1"
                  },
                  "scope": 63,
                  "src": "323:113:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 64,
              "src": "131:307:1",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "39:399:1"
        },
        "id": 1
      }
    },
    "contracts": {
      "@openzeppelin/contracts/proxy/Proxy.sol": {
        "Proxy": {
          "abi": [
            {
              "stateMutability": "payable",
              "type": "fallback"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}"
        }
      },
      "contracts/ChessTournamentProxy.sol": {
        "ChessTournamentProxy": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_implementationAddress",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "stateMutability": "payable",
              "type": "fallback"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_53": {
                  "entryPoint": null,
                  "id": 53,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address_fromMemory": {
                  "entryPoint": 80,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:306:2",
                    "nodeType": "YulBlock",
                    "src": "0:306:2",
                    "statements": [
                      {
                        "nativeSrc": "6:3:2",
                        "nodeType": "YulBlock",
                        "src": "6:3:2",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "95:209:2",
                          "nodeType": "YulBlock",
                          "src": "95:209:2",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "141:16:2",
                                "nodeType": "YulBlock",
                                "src": "141:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "150:1:2",
                                          "nodeType": "YulLiteral",
                                          "src": "150:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "153:1:2",
                                          "nodeType": "YulLiteral",
                                          "src": "153:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "143:6:2",
                                        "nodeType": "YulIdentifier",
                                        "src": "143:6:2"
                                      },
                                      "nativeSrc": "143:12:2",
                                      "nodeType": "YulFunctionCall",
                                      "src": "143:12:2"
                                    },
                                    "nativeSrc": "143:12:2",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "143:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "116:7:2",
                                        "nodeType": "YulIdentifier",
                                        "src": "116:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "125:9:2",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "112:3:2",
                                      "nodeType": "YulIdentifier",
                                      "src": "112:3:2"
                                    },
                                    "nativeSrc": "112:23:2",
                                    "nodeType": "YulFunctionCall",
                                    "src": "112:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "137:2:2",
                                    "nodeType": "YulLiteral",
                                    "src": "137:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "108:3:2",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:3:2"
                                },
                                "nativeSrc": "108:32:2",
                                "nodeType": "YulFunctionCall",
                                "src": "108:32:2"
                              },
                              "nativeSrc": "105:52:2",
                              "nodeType": "YulIf",
                              "src": "105:52:2"
                            },
                            {
                              "nativeSrc": "166:29:2",
                              "nodeType": "YulVariableDeclaration",
                              "src": "166:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "185:9:2",
                                    "nodeType": "YulIdentifier",
                                    "src": "185:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "179:5:2",
                                  "nodeType": "YulIdentifier",
                                  "src": "179:5:2"
                                },
                                "nativeSrc": "179:16:2",
                                "nodeType": "YulFunctionCall",
                                "src": "179:16:2"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "170:5:2",
                                  "nodeType": "YulTypedName",
                                  "src": "170:5:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "258:16:2",
                                "nodeType": "YulBlock",
                                "src": "258:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "267:1:2",
                                          "nodeType": "YulLiteral",
                                          "src": "267:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "270:1:2",
                                          "nodeType": "YulLiteral",
                                          "src": "270:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "260:6:2",
                                        "nodeType": "YulIdentifier",
                                        "src": "260:6:2"
                                      },
                                      "nativeSrc": "260:12:2",
                                      "nodeType": "YulFunctionCall",
                                      "src": "260:12:2"
                                    },
                                    "nativeSrc": "260:12:2",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "260:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "217:5:2",
                                        "nodeType": "YulIdentifier",
                                        "src": "217:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "228:5:2",
                                            "nodeType": "YulIdentifier",
                                            "src": "228:5:2"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "243:3:2",
                                                    "nodeType": "YulLiteral",
                                                    "src": "243:3:2",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "248:1:2",
                                                    "nodeType": "YulLiteral",
                                                    "src": "248:1:2",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "239:3:2",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "239:3:2"
                                                },
                                                "nativeSrc": "239:11:2",
                                                "nodeType": "YulFunctionCall",
                                                "src": "239:11:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "252:1:2",
                                                "nodeType": "YulLiteral",
                                                "src": "252:1:2",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "235:3:2",
                                              "nodeType": "YulIdentifier",
                                              "src": "235:3:2"
                                            },
                                            "nativeSrc": "235:19:2",
                                            "nodeType": "YulFunctionCall",
                                            "src": "235:19:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "224:3:2",
                                          "nodeType": "YulIdentifier",
                                          "src": "224:3:2"
                                        },
                                        "nativeSrc": "224:31:2",
                                        "nodeType": "YulFunctionCall",
                                        "src": "224:31:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "214:2:2",
                                      "nodeType": "YulIdentifier",
                                      "src": "214:2:2"
                                    },
                                    "nativeSrc": "214:42:2",
                                    "nodeType": "YulFunctionCall",
                                    "src": "214:42:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "207:6:2",
                                  "nodeType": "YulIdentifier",
                                  "src": "207:6:2"
                                },
                                "nativeSrc": "207:50:2",
                                "nodeType": "YulFunctionCall",
                                "src": "207:50:2"
                              },
                              "nativeSrc": "204:70:2",
                              "nodeType": "YulIf",
                              "src": "204:70:2"
                            },
                            {
                              "nativeSrc": "283:15:2",
                              "nodeType": "YulAssignment",
                              "src": "283:15:2",
                              "value": {
                                "name": "value",
                                "nativeSrc": "293:5:2",
                                "nodeType": "YulIdentifier",
                                "src": "293:5:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "283:6:2",
                                  "nodeType": "YulIdentifier",
                                  "src": "283:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nativeSrc": "14:290:2",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "61:9:2",
                            "nodeType": "YulTypedName",
                            "src": "61:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "72:7:2",
                            "nodeType": "YulTypedName",
                            "src": "72:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "84:6:2",
                            "nodeType": "YulTypedName",
                            "src": "84:6:2",
                            "type": ""
                          }
                        ],
                        "src": "14:290:2"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b5060405161010a38038061010a833981016040819052602c916050565b600080546001600160a01b0319166001600160a01b0392909216919091179055607e565b600060208284031215606157600080fd5b81516001600160a01b0381168114607757600080fd5b9392505050565b607e8061008c6000396000f3fe6080604052600a600c565b005b6023601f6000546001600160a01b031690565b6025565b565b3660008037600080366000845af43d6000803e8080156043573d6000f35b3d6000fdfea2646970667358221220a89668abd10f84bdac87d7fc974da2772f696cb425800b3e7049d57efca5687764736f6c63430008190033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x10A CODESIZE SUB DUP1 PUSH2 0x10A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x2C SWAP2 PUSH1 0x50 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x7E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7E DUP1 PUSH2 0x8C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x23 PUSH1 0x1F PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x25 JUMP JUMPDEST JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x43 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 SWAP7 PUSH9 0xABD10F84BDAC87D7FC SWAP8 0x4D LOG2 PUSH24 0x2F696CB425800B3E7049D57EFCA5687764736F6C63430008 NOT STOP CALLER ",
              "sourceMap": "131:307:1:-:0;;;211:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;265:21;:46;;-1:-1:-1;;;;;;265:46:1;-1:-1:-1;;;;;265:46:1;;;;;;;;;;131:307;;14:290:2;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:2;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:2:o;:::-;131:307:1;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_34": {
                  "entryPoint": null,
                  "id": 34,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_delegate_10": {
                  "entryPoint": 37,
                  "id": 10,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_fallback_26": {
                  "entryPoint": 12,
                  "id": 26,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_implementation_62": {
                  "entryPoint": null,
                  "id": 62,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600a600c565b005b6023601f6000546001600160a01b031690565b6025565b565b3660008037600080366000845af43d6000803e8080156043573d6000f35b3d6000fdfea2646970667358221220a89668abd10f84bdac87d7fc974da2772f696cb425800b3e7049d57efca5687764736f6c63430008190033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x23 PUSH1 0x1F PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x25 JUMP JUMPDEST JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x43 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 SWAP7 PUSH9 0xABD10F84BDAC87D7FC SWAP8 0x4D LOG2 PUSH24 0x2F696CB425800B3E7049D57EFCA5687764736F6C63430008 NOT STOP CALLER ",
              "sourceMap": "131:307:1:-:0;;;2649:11:0;:9;:11::i;:::-;131:307:1;2323:83:0;2371:28;2381:17;382:7:1;408:21;-1:-1:-1;;;;;408:21:1;;323:113;2381:17:0;2371:9;:28::i;:::-;2323:83::o;949:895::-;1287:14;1284:1;1281;1268:34;1501:1;1498;1482:14;1479:1;1463:14;1456:5;1443:60;1577:16;1574:1;1571;1556:38;1615:6;1682:66;;;;1797:16;1794:1;1787:27;1682:66;1717:16;1714:1;1707:27"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementationAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ChessTournamentProxy.sol\":\"ChessTournamentProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"contracts/ChessTournamentProxy.sol\":{\"keccak256\":\"0x31c8739dc1eacd9f25b2ff9e30f7166c709aba5ea423947b035e7dbfc87d0373\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://561f7e57a00cb50ec926a3a2256b919fcda37ccd1bc3265247d5310b4d21cb15\",\"dweb:/ipfs/Qme6a2AUtZxzwHdozJ3DVHeqevzJhsX9BaqkoqDWLKQZkR\"]}},\"version\":1}"
        }
      }
    }
  }
}