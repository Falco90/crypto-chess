import Head from "next/head";
import styles from "../../styles/Home.module.css";
import { ConnectButton } from "@rainbow-me/rainbowkit";
import Header from "../../components/Header";
import { useState } from "react";
import DeployContract from "../../hooks/use-deploy-contract";

const New = () => {
    const [tournamentData, setTournamentData] = useState({
        name: "",
        url: "",
        organizer: "",
        status: "",
        fee: "",
        maxPlayers: 0
    });

    async function fetchTournament(event: any) {
        event.preventDefault();

        await fetch(tournamentData.url, {
            method: 'GET',
            mode: 'cors',
        }).then(async (response) => {
            const data = await response.json();
            setTournamentData({
                ...tournamentData,
                name: data.name,
                organizer: data.organizer,
                status: data.status
            })
        });

    }

    return (
        <div className={styles.container} >
            <Header />
            <Head>
                <title>Crypto Chess</title>
                <meta
                    content="Generated by @rainbow-me/create-rainbowkit"
                    name="description"
                />
                <link href="/favicon.ico" rel="icon" />
            </Head>

            <main className={styles.main}>

                <h1 className={styles.title}>
                    Deploy New Tournament
                </h1>
                <form>
                    <input value={tournamentData.url} onChange={(e) => {
                        setTournamentData({ ...tournamentData, url: e.target.value })
                    }} type="text" />
                    <label htmlFor="">Chess.com tournament URL</label>
                    <button onClick={(e) => fetchTournament(e)} type="submit">Link</button>
                    <input value={tournamentData.maxPlayers} type="text" onChange={(e) => { setTournamentData({ ...tournamentData, maxPlayers: parseInt(e.target.value) }) }} />
                    <label htmlFor="">Amount of players</label>
                    <input value={tournamentData.fee} type="text" onChange={(e) => { setTournamentData({ ...tournamentData, fee: e.target.value }) }} />
                    <label htmlFor="">Joining Fee</label>
                </form>
                < div >
                    <div>name: {tournamentData ? tournamentData.name : ""}</div>
                    <div>url: {tournamentData ? tournamentData.url : ""}</div>
                    <div>organizer: {tournamentData ? tournamentData.organizer : ""}</div>
                    <div>status: {tournamentData ? tournamentData.status : ""}</div>
                </div>
                <DeployContract url={tournamentData.url} maxPlayers={tournamentData.maxPlayers} fee={tournamentData.fee} />
            </main >

            <footer className={styles.footer}>
                <a href="https://rainbow.me" rel="noopener noreferrer" target="_blank">
                    Made by Falco90 during Flare x Encode April 2025
                </a>
            </footer>
        </div >
    )
}

export default New;